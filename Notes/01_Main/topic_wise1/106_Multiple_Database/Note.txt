-> Most commonly we will use to setup 1 database and connect Django application with that 1 database, and Django will send the Queries directly to that database
-> But when we will setup multiple database django will no longer have an idea which database to select
-> './02_Router_In_between.png'
-> So the idea is to create the Database router and in that router we will going describe what database are available for django application to connect to.
-> What we use to do to query on the database before is like this:
    -> <Model>.objects.all()
-> But now we are having multiple database so we will going to query like this:
    -> <Model>.objects.using('<database>').all()
    -> And this information is going to the 'Router' and router chose which database to use.
-> For now we will going to use 'sqlite3' database

*) Steps:
    -> now we will going to configure 'users_db' database on './core/settings.py', 'DATABASES' variable and configure router for that on './routers/db_routers.py'
    -> now we can run migrations on that database and we have to provide the information about which database to migrate
        -> python manage.py migrate --database=users_db
    -> now we will going to create super user:
        -> python manage.py createsuperuser --database=users_db
    
    -> Now we will going to create another app 'blue'
    -> and provide 'blue' apps on 'INSTALLED_APPS' variable
    -> and configure the new database for 'blue' app on 'DATABASES'
    -> And configure the router for that database
    -> And then we will going to need a new Model first to migrate
    -> First we will create a migration file:
        -> python manage.py makemigrations
    -> Now migrate:
        -> python manage.py migrate --database=blue_db
    -> Now we will going to register the Admin on './blue/admin.py' for all models on 'blue' application
    
    -> Now we will going to create another app 'aqua'
    -> And do the exact same thing explained above for this application as well